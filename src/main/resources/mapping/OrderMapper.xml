<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hcservice.dao.OrderMapper">
    <resultMap id="BaseResultMap" type="com.hcservice.domain.model.Order">
        <id column="ORDER_ID" jdbcType="VARCHAR" property="orderId" />
        <result column="CHARGE_NAME" jdbcType="VARCHAR" property="chargeName" />
        <result column="TYPE" jdbcType="VARCHAR" property="type" />
        <result column="ITEM_ID" jdbcType="INTEGER" property="itemId" />
        <result column="ORDER_PRICE" jdbcType="INTEGER" property="orderPrice" />
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
        <result column="STATUS" jdbcType="INTEGER" property="status" />
        <association property="user" select="com.hcservice.dao.UserMapper.getUserByUserId" column="USER_ID" />
    </resultMap>

    <insert id="insertOrder" parameterType="com.hcservice.domain.model.Order">
        insert into `ORDER` (ORDER_ID, CHARGE_NAME, TYPE, ITEM_ID, ORDER_PRICE, CREATE_TIME, STATUS, USER_ID)
        values (
            #{orderId,jdbcType=VARCHAR},
            #{chargeName,jdbcType=VARCHAR},
            #{type,jdbcType=VARCHAR},
            #{itemId,jdbcType=INTEGER},
            #{orderPrice,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{status,jdbcType=INTEGER},
            #{user.userId,jdbcType=INTEGER}
        )
    </insert>
    <update id="updateOrderById" parameterType="com.hcservice.domain.model.Order">
    update `ORDER`
    set
        CHARGE_NAME = #{chargeName,jdbcType=VARCHAR},
        TYPE = #{type,jdbcType=VARCHAR},
        ITEM_ID = #{itemId,jdbcType=INTEGER},
        ORDER_PRICE = #{orderPrice,jdbcType=INTEGER},
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
        STATUS = #{status,jdbcType=INTEGER},
        USER_ID = #{user.userId,jdbcType=INTEGER}
    where
        ORDER_ID = #{orderId,jdbcType=VARCHAR}
    </update>
    <select id="getOrderById" resultMap="BaseResultMap">
        select ORDER_ID, CHARGE_NAME, TYPE, ITEM_ID, ORDER_PRICE, CREATE_TIME, STATUS, USER_ID
        from `ORDER`
        where ORDER_ID = #{orderId,jdbcType=INTEGER}
    </select>
    <select id="getOrderListBySearch" parameterType="java.lang.String" resultMap="BaseResultMap">
        select ORDER_ID, CHARGE_NAME, TYPE, ITEM_ID, ORDER_PRICE, CREATE_TIME, STATUS, USER_ID
        from `ORDER`
        where ORDER_ID LIKE #{search,jdbcType=VARCHAR}
        order by CREATE_TIME DESC
    </select>


    <resultMap id="ConfigPriceResultMap" type="com.hcservice.domain.model.ConfigPrice">
        <id column="CONFIG_ID" jdbcType="INTEGER" property="configId" />
        <result column="NAME" jdbcType="VARCHAR" property="name" />
        <result column="TYPE" jdbcType="VARCHAR" property="type" />
        <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
        <result column="PRICE" jdbcType="INTEGER" property="price" />
        <result column="UNIT" jdbcType="VARCHAR" property="unit" />
        <result column="STATUS" jdbcType="INTEGER" property="status" />
    </resultMap>

    <select id="getConfigPriceByName" resultMap="ConfigPriceResultMap">
        select CONFIG_ID, NAME, TYPE, DESCRIPTION, PRICE, UNIT, STATUS
        from CONFIG_PRICE
        where NAME = #{name,jdbcType=VARCHAR}
    </select>


</mapper>
