<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hcservice.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.hcservice.domain.model.Role">
    <id column="ROLE_ID" jdbcType="INTEGER" property="roleId" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="DETAIL" jdbcType="VARCHAR" property="detail" />
    <collection property="admins" ofType="com.hcservice.domain.model.Admin" select="com.hcservice.dao.AdminMapper.getAdminsByRoleId" column="ROLE_ID" />
    <collection property="permissions" ofType="com.hcservice.domain.model.Permission" select="com.hcservice.dao.PermissionMapper.getPermissionsByRoleId" column="ROLE_ID" />
  </resultMap>
  <resultMap id="RoleResultMap1" type="com.hcservice.domain.model.Role">
    <id column="ROLE_ID" jdbcType="INTEGER" property="roleId" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="DETAIL" jdbcType="VARCHAR" property="detail" />
    <collection property="permissions" ofType="com.hcservice.domain.model.Permission" select="com.hcservice.dao.PermissionMapper.getPermissionsByRoleId" column="ROLE_ID" />
  </resultMap>
  <resultMap id="RoleResultMap2" type="com.hcservice.domain.model.Role">
    <id column="ROLE_ID" jdbcType="INTEGER" property="roleId" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="DETAIL" jdbcType="VARCHAR" property="detail" />
    <collection property="admins" ofType="com.hcservice.domain.model.Admin" select="com.hcservice.dao.AdminMapper.getAdminsByRoleId" column="ROLE_ID" />
  </resultMap>
  <sql id="Base_Column_List">
    ROLE_ID, ROLE_NAME, DETAIL
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ROLE
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="getRolesByAdminId" resultMap="RoleResultMap1" parameterType="java.lang.Integer">
    SELECT r.*
    FROM ADMIN_ROLE ar, ROLE r
    WHERE ar.RID = r.ROLE_ID AND ar.AID = #{ADMIN_ID}
  </select>
  <select id="getRolesByPermissionId" resultMap="RoleResultMap2" parameterType="java.lang.Integer">
    SELECT r.*
    FROM ROLE_PERMISSION rp, ROLE r
    WHERE rp.ROLE_ID = r.ROLE_ID AND rp.PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ROLE
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hcservice.domain.model.Role">
    insert into ROLE (ROLE_ID, ROLE_NAME)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hcservice.domain.model.Role">
    insert into ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="detail != null">
        DETAIL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcservice.domain.model.Role">
    update ROLE
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcservice.domain.model.Role">
    update ROLE
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR}
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>